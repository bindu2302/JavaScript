✅ What is JavaScript?
----------------------------------------
JavaScript is a high-level, interpreted scripting language used to make web pages interactive and dynamic. 
It is one of the core technologies of the World Wide Web, alongside HTML and CSS.

JavaScript is a programming language created specifically for web pages to make them responsive and interactive. It allows websites to do things 
that respond directly to what you do, like clicking, typing, or hovering. With JavaScript, you don’t just see information—you experience it.


How Does JavaScript Run in the Browser?
--------------------------------------------------------
JavaScript runs in the browser through something called a JavaScript engine. Each web browser (like Chrome, Firefox, Safari) has its own JavaScript
engine, which reads and executes JavaScript code directly on the page. Here’s how it works:

JavaScript Engine: This is a program built into the browser to understand and run JavaScript code. Some popular engines are:

Chrome uses V8.

Firefox uses SpiderMonkey.

Safari uses JavaScriptCore.

No Compilation Needed: Unlike languages like C++ or Java, which need to be compiled (converted into machine code), 
JavaScript is interpreted by the browser as soon as the code is read. This is why JavaScript is often referred to as an interpreted language 
rather than a compiled one.

Execution: The browser reads JavaScript line by line, interpreting and executing it immediately, which allows for quick interactions and
responses on the page.


🧠 Why Do We Use JavaScript?
JavaScript is used to:
---------------------------------------------------------
Make web pages interactive (e.g., buttons, sliders, forms)
Control browser behavior
Handle events (clicks, mouse movements)
Build web applications (e.g., Gmail, Facebook)
Communicate with servers using APIs (fetching data)
Create games, animations, and real-time updates


🎯 Purpose of JavaScript:
------------------------------------
The main purpose is to add behavior to web pages. While HTML is used for structure and CSS for style, JavaScript is used for logic and interaction.

🌟 Advantages of JavaScript
------------------------------------
✅ Client-side execution – Fast because it runs in the browser

✅ Interactivity – Enhances user experience

✅ Wide browser support

✅ Rich features – DOM manipulation, animations, etc.

✅ Lightweight and easy to learn

✅ Used in both front-end and back-end (with Node.js)

✅ Large community and frameworks – React, Angular, Vue


⚠️ Disadvantages of JavaScript
------------------------------------------
❌ Browser differences – May work differently in some browsers

❌ Security issues – Can be exploited if not coded properly

❌ Not strongly typed – Errors might not be visible until runtime

❌ Can be disabled – Users can turn off JavaScript in browsers

❌ Debugging can be tricky – Though tools like Chrome DevTools help



🧾 Why Is JavaScript Called a Scripting Language?
-------------------------------------------------------
A scripting language is a programming language used to automate tasks that could be manually done by a user.

JavaScript is called a scripting language because:
It is interpreted at runtime (not compiled)
It runs inside another program (the browser)
It "scripts" the behavior of the webpage

JavaScript is often called a scripting language because it’s designed to perform smaller, specific tasks on a web page, rather than 
creating an entire application from scratch. Imagine writing a quick set of instructions like, “When the user clicks here, show a message,
” or “If they scroll down, change the background color.” These are scripts—small, targeted commands that JavaScript handles directly in the browser.


🧩 Where Does JavaScript Run?
---------------------------------
Client-side (Browser) – For UI interactions

Server-side (Node.js) – For databases, APIs, backend processing


| Feature              | Details                            |
| -------------------- | ---------------------------------- |
| Language type        | Scripting, interpreted, high-level |
| Used for             | Web interactivity and logic        |
| Runs on              | Browsers and servers (Node.js)     |
| Core technologies    | HTML, CSS, JavaScript              |
| Frameworks/Libraries | React, Angular, Vue, jQuery, etc.  |
